# TLS log
set -gx SSLKEYLOGFILE $HOME/.tls-key.log

# .local
set -gp PATH $HOME/.local/bin

# homebrew
set -gp PATH /usr/local/sbin

# OpenSSL
set -gp PATH /usr/local/opt/openssl/bin

# curl
set -gp PATH /usr/local/opt/curl/bin

# jenv
set -gp PATH $HOME/.jenv/bin
source (jenv init - | psub)

# scala
set -gp PATH $HOME/.scalaenv/bin
source (scalaenv init - | psub)

# courisier
set -ga PATH "$HOME/Library/Application Support/Coursier/bin"

# rust/cargo
set -gp PATH $HOME/.cargo/bin

# swift
set -gx TOOLCHAINS swift

# volta (node)
set -gx VOLTA_HOME $HOME/.volta
set -gp PATH $VOLTA_HOME/bin

# ocaml/opam
source $HOME/.opam/opam-init/init.fish > /dev/null 2> /dev/null; or true

# pyenv
status is-login; and pyenv init --path | source
pyenv init - | source

# rbenv
set -gp PATH $HOME/.rbenv/bin
source (rbenv init - | psub)

# goenv
set -gx GOPATH $HOME/develop/go
set -gx GOENV_ROOT $HOME/.goenv
set -gp PATH $GOENVROOT/bin
set -gx GOENV_DISABLE_GOPATH 0
source (goenv init - | psub)
set -ga PATH $GOPATH/bin

# ghcup
set -q GHCUP_INSTALL_BASE_PREFIX[1]; or set GHCUP_INSTALL_BASE_PREFIX $HOME ; set -gx PATH $HOME/.cabal/bin $PATH /Users/kotoji/.ghcup/bin # ghcup-env

# libpcap
set -g PATH /usr/local/opt/libpcap/bin $PATH
# set -x LDFLAGS -L/usr/local/opt/libpcap/lib
# set -x CPPFLAGS -I/usr/local/opt/libpcap/include
# set -x PKG_CONFIG_PATH /usr/local/opt/libpcap/lib/pkgconfig

# mysql-client
set -gp PATH /usr/local/opt/mysql-client/bin

# FlexLexer
set -gp PATH /usr/local/opt/flex/bin

# llvm
alias llvm-clang='/usr/local/opt/llvm/bin/clang -L/usr/local/opt/llvm/lib -I/usr/local/opt/llvm/include'
alias llvm-clang++='/usr/local/opt/llvm/bin/clang++ -L/usr/local/opt/llvm/lib -I/usr/local/opt/llvm/include'
alias llvm-lldb='/usr/local/opt/llvm/bin/lldb'
alias llvm-as='/usr/local/opt/llvm/bin/llvm-as'

